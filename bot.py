import random
from threading import Thread
import telebot
from telebot import types
import cfg
import time

Langs = types.ReplyKeyboardMarkup(resize_keyboard=True)
bl1 = types.KeyboardButton('English üá¨üáß')
bl2 = types.KeyboardButton('–†—É—Å—Å–∫–∏–π üá∑üá∫')
bl3 = types.KeyboardButton('–ö—ã—Ä–≥—ã–∑—á–∞ üá∞üá¨')
start = types.KeyboardButton('/start')
b4eng = types.KeyboardButton('Stop')
b4rus = types.KeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å')
b4ukr = types.KeyboardButton('–¢–æ–∫—Ç–æ—Ç—É—É')
Langs.add(bl1, bl2)
Langs.add(bl3)
Langs.add(start)

time_Eng = types.ReplyKeyboardMarkup(resize_keyboard=True)
t1 = types.KeyboardButton('30')
t2 = types.KeyboardButton('60')
time_Eng.add(t1, t2)
time_Eng.add(b4eng)

time_Rus = types.ReplyKeyboardMarkup(resize_keyboard=True)
time_Rus.add(t1, t2)
time_Rus.add(b4rus)

time_Kgz = types.ReplyKeyboardMarkup(resize_keyboard=True)
time_Kgz.add(t1, t2)
time_Kgz.add(b4ukr)

bot = telebot.TeleBot(cfg.token)


def random_rus_30m():
    text = ['–î–µ—Ä–∂–∏—Ç–µ —Ä—É–∫–∏ –≤ —á–∏—Å—Ç–æ—Ç–µ, '
            '\n–ß–∞—Å—Ç–æ –º–æ–π—Ç–µ –∏—Ö —Å –º—ã–ª–æ–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–∑–∏–Ω—Ñ–∏—Ü–∏—Ä—É—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ, '
            '\n–ø–µ—Ä–µ–¥ –µ–¥–æ–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –º–æ–π—Ç–µ —Ä—É–∫–∏.', '–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –∫–∞—Å–∞—Ç—å—Å—è —Ä—Ç–∞, –Ω–æ—Å–∞ –∏–ª–∏ –≥–ª–∞–∑ –Ω–µ–º—ã—Ç—ã–º–∏ —Ä—É–∫–∞–º–∏;',
            '\n–ù–∞ —Ä–∞–±–æ—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –æ—á–∏—â–∞–π—Ç–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, '
            '\n–∫ –∫–æ—Ç–æ—Ä—ã–º –≤—ã –ø—Ä–∏–∫–∞—Å–∞–µ—Ç–µ—Å—å (–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –ø–∞–Ω–µ–ª–∏ –æ—Ä–≥—Ç–µ—Ö–Ω–∏–∫–∏ –æ–±—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, '
            '\n—ç–∫—Ä–∞–Ω —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞, –ø—É–ª—å—Ç—ã, –¥–≤–µ—Ä–Ω—ã–µ —Ä—É—á–∫–∏ –∏ –ø–æ—Ä—É—á–Ω–∏).',
            '\n–ù–æ—Å–∏—Ç–µ —Å —Å–æ–±–æ–π –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ —Å–∞–ª—Ñ–µ—Ç–∫–∏ –∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–∫—Ä—ã–≤–∞–π—Ç–µ –Ω–æ—Å –∏ —Ä–æ—Ç, –∫–æ–≥–¥–∞ –≤—ã –∫–∞—à–ª—è–µ—Ç–µ –∏–ª–∏ —á–∏—Ö–∞–µ—Ç–µ, '
            '\n–∏ —É—Ç–∏–ª–∏–∑–∏—Ä—É–π—Ç–µ –∏—Ö –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.',
            '\n–ù–æ—Å–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —Å–æ–±–æ–π –¥–µ–∑–∏–Ω—Ñ–∏—Ü–∏—Ä—É—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥–ª—è —Ä—É–∫, '
            '\n—á—Ç–æ–±—ã –≤ –ª—é–±–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ –≤—ã –º–æ–≥–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å –∏—Ö.',
            '\n–ß–∞—Å—Ç–æ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –ø–æ–º–µ—â–µ–Ω–∏–µ.',
            '\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –¥–µ—Ç—è–º –æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–µ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞.']
    return random.choice(text)


def random_rus_1h():
    text = [
        '–ü–æ—Ä–∞ –ø–æ–º—ã—Ç—å —Ä—É–∫–∏.',
        '–ú—ã—Ç—å–µ —Ä—É–∫ ‚Äì —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏.',
        '–í—Ä–µ–º—è –º—ã—Ç—å —Ä—É–∫–∏. –ß–µ—Ä–µ–∑ –≥—Ä—è–∑–Ω—ã–µ —Ä—É–∫–∏ –≤ –Ω–∞—à –∫–∏—à–µ—á–Ω–∏–∫ –ø–æ–ø–∞–¥–∞—é—Ç –ø–∞—Ä–∞–∑–∏—Ç—ã –∏ –≤–æ–∑–±—É–¥–∏—Ç–µ–ª–∏ –¥–∏–∞—Ä–µ–∏ –≤—Å–µ—Ö –≤–∏–¥–æ–≤.',
        '–í—Ä–µ–º—è –º—ã—Ç—å —Ä—É–∫–∏. –ú—ã—Ç—å —Ä—É–∫–∏ –Ω—É–∂–Ω–æ, –∫–∞–∫ –º–∏–Ω–∏–º—É–º, –≤ 8 —Å–ª—É—á–∞—è—Ö: –∫–æ–≥–¥–∞ –≤—ã —Å—Ö–æ–¥–∏–ª–∏ –≤ —Ç—É–∞–ª–µ—Ç, —á–∏—Ö–Ω—É–ª–∏, –ø–æ–∫–∞—à–ª—è–ª–∏, '
        '\n–≤—ã—Å–º–æ—Ä–∫–∞–ª–∏—Å—å, –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –µ–¥—É, –≤—ã–±—Ä–æ—Å–∏–ª–∏ –º—É—Å–æ—Ä, –ø–æ–≥–ª–∞–¥–∏–ª–∏ –∂–∏–≤–æ—Ç–Ω–æ–µ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å —Å —É–ª–∏—Ü—ã.',
        '–ï—Å–ª–∏ –º—ã–ª–∞ –Ω–µ—Ç ‚Äì¬†–≤—Å–µ —Ä–∞–≤–Ω–æ –ª—É—á—à–µ –ø–æ–º—ã—Ç—å —Ä—É–∫–∏, —á–µ–º –ø–æ–π—Ç–∏ —Å –≥—Ä—è–∑–Ω—ã–º–∏.',
        '–ú–æ–π—Ç–µ —Ä—É–∫–∏ –æ—Ç 20 —Å–µ–∫—É–Ω–¥ –¥–æ –º–∏–Ω—É—Ç—ã. –ì–ª–∞–≤–Ω–æ–µ ‚Äì¬†–Ω–µ –º–µ–Ω—å—à–µ.',
        '–í—ã—Ç–∏—Ä–∞–π—Ç–µ —Ä—É–∫–∏ —Å—É—Ö–∏–º –∏–ª–∏ –±—É–º–∞–∂–Ω—ã–º –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ–º. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—à–∫—É ‚Äì¬†–ª—É—á—à–µ, —á–µ–º –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.',
        '–í—Ä–µ–º—è –º—ã—Ç—å —Ä—É–∫–∏. –í—ã—Ç–∏—Ä–∞—Ç—å –æ–± –æ–¥–µ–∂–¥—É –∏–ª–∏ –Ω–µ –≤—ã—Ç–∏—Ä–∞—Ç—å —Å–æ–≤—Å–µ–º ‚Äì¬†—Å–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞ –Ω–µ—Ç.',
        '–ï—Å–ª–∏ –ø–æ–º—ã—Ç—å —Ä—É–∫–∏ –Ω–µ–≥–¥–µ ‚Äì¬†–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫.',
        '–ü–æ—Ä–∞ –ø–æ–º—ã—Ç—å —Ä—É–∫–∏. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –±–∞–∫—Ç–µ—Ä–∏–π –Ω–∞ —Ä—É–∫–∞—Ö –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—á–∏–∫–∞—Ö –ø–∞–ª—å—Ü–µ–≤ –∏ –ø–æ–¥ –Ω–æ–≥—Ç—è–º–∏',
        '–†—É–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º—ã—Ç—å —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∏ —Ç—ã–ª—å–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, –º–µ–∂–¥—É –ø–∞–ª—å—Ü–∞–º–∏ –∏ —Å—Ç–∞—Ä–∞—Ç—å—Å—è –ø—Ä–æ–º—ã—Ç—å –ø–æ–¥ –Ω–æ–≥—Ç—è–º–∏.'
    ]
    return random.choice(text)


def random_eng_30m():
    text = [
        'Keep your hands clean, wash them often using soap or disinfect, '
        '\nmake sure that you washed your hands before eating.',
        'Try not to touch your mouth, nose or eyes with unwashed hands.',
        'Clean regularly surfaces and devices you touch '
        '\n(computer‚Äôs keyboard, office equipment panels, smartphone‚Äôs screen, remotes, door handles, handrails).',
        'Carry one-off napkins with you and cover your nose and mouth every time you cough or sneeze, '
        '\nand always utilize them after using. ',
        'Carry a hand  sanitizer so that you can clean them anytime.',
        'Air out the space often.'
        'Tell the children about coronavirus preventions.'
    ]
    return random.choice(text)


def random_eng_1h():
    text = [
        'It‚Äôs time to wash your hands.',
        'Washing hands is the easiest way for prevention.',
        'Time to wash your hands. Through dirty hands parasites and all-kinds of diarrhea pathogens enter our intestine.',
        'Time to wash your hands. You should wash your hands at least in 8 cases: when you go to the WC, sneeze, cough,'
        '\nblow your nose, prepare food, throw out the trash, stroke the animal and return from outside. ',
        'Even if you don‚Äôt have soap, it‚Äôs still better to wash your hands than to go with dirty ones. ',
        'Wash your hands for 20 seconds to a minute. No less.',
        'Wipe your hands with dry or paper towel. To use drying is better than not to do.',
        'It‚Äôs time to wash your hands.  To wipe them on clothes or not to wipe them at all ‚Äì to reduce all to nothing.',
        'If you have no place where you can wash your hands in, use the antiseptic.',
        'Time to wash your hands. Most of the bacteria on the hands are on your fingertips and under your nails.',
        'Hands should be washed from the inside and from the back, between fingers and under the nails.'
    ]
    return random.choice(text)


def random_kgz_30m():
    text = [
        '–ö–æ–ª –∂—É—É—à –º–µ–∑–≥–∏–ª–∏.',
        '–ö–æ–ª–¥—É –∂—É—É–≥–∞–Ω—ã- –æ–æ—Ä—É–ª–∞—Ä–¥—ã–Ω –∞–ª–¥—ã–Ω –∞–ª—É—É–≥–∞  —ç“£ –∂”©–Ω”©–∫”©–π –∂–æ–ª—É.',
        '–ö–æ–ª –∂—É—É—à —É–±–∞–≥—ã. –ö–∏—Ä –∫–æ–ª –∞—Ä–∫—ã–ª—É—É –±–∏–∑–¥–∏–Ω –∏—á–µ–≥–∏–±–∏–∑–≥–µ –ø–∞—Ä–∞–∑–∏—Ç—Ç–µ—Ä –∂–∞–Ω–∞ –¥–∏–∞—Ä–µ—è–Ω—ã–Ω –∫–æ–∑–≥–æ–≥—É—á—Ç–∞—Ä—ã–Ω—ã–Ω –±–∞—Ä–¥—ã–∫ —Ç“Ø—Ä–ª”©—Ä“Ø –∫–∏—Ä–µ –∞–ª–∞—Ç.',
        '–ö–æ–ª –∂—É—É—à —É–±–∞–≥—ã. –ö–æ–ª–¥—É, —ç“£ –∞–∑ –¥–µ–≥–µ–Ω–¥–µ, 8 —É—á—É—Ä–¥–∞ –∂—É—É—à –∫–µ—Ä–µ–∫: –¥–∞–∞—Ä–∞—Ç–∫–∞–Ω–∞–≥–∞ –±–∞—Ä–≥–∞–Ω–¥–∞,  —á“Ø—á–∫“Ø—Ä–≥”©–Ω–¥”©, –∂”©—Ç”©–ª–≥”©–Ω–¥”©, '
        '\n—á–∏–º–∫–∏—Ä–≥–µ–Ω–¥–µ, —Ç–∞–º–∞–∫ –¥–∞—è—Ä–¥–∞–≥–∞–Ω–¥–∞, —Ç–∞—à—Ç–∞–Ω–¥—ã–ª–∞—Ä–¥—ã —á—ã–≥–∞—Ä–≥–∞–Ω–¥–∞, –∂–∞–Ω—ã–±–∞—Ä–ª–∞—Ä–¥—ã —Å—ã–ª–∞–≥–∞–Ω–¥–∞ –∂–∞–Ω–∞ –∫”©—á”©–¥”©–Ω –∫–µ–ª–≥–µ–Ω–¥–µ.',
        '–≠–≥–µ—Ä–¥–µ —Å–∞–º—ã–Ω –∂–æ–∫ –±–æ–ª—Å–æ, –∫–∏—Ä –∫–æ–ª –º–µ–Ω–µ–Ω –∂“Ø—Ä–±”©—Å—Ç”©–Ω,  –∫–æ–ª–¥—É –∂—É—É–≥–∞–Ω—ã –∞—Ä—Ç—ã–∫. –ö–æ–ª–¥—É 20 —Å–µ–∫—É–Ω–¥–∞–¥–∞–Ω –±–∏—Ä –º“Ø–Ω”©—Ç–∫–æ —á–µ–π–∏–Ω–∫–∏ —É–±–∞–∫—ã—Ç—Ç–∞ –∂—É—É–≥—É–ª–∞. –≠“£ –Ω–µ–≥–∏–∑–∏ - –∞–Ω–¥–∞–Ω –∞–∑ –±–æ–ª–±–æ—Å—É–Ω.',
        '–ö–æ–ª–¥—É –∫—É—Ä–≥–∞–∫ –∂–µ –∫–∞–≥–∞–∑ —Å“Ø–ª–≥“Ø –º–µ–Ω–µ–Ω –∞–∞—Ä—á—ã–≥—ã–ª–∞. –ö—É—Ä–≥–∞—Ç–∫—ã—á—Ç—ã –∫–æ–ª–¥–æ–Ω—É—É - –∫–æ–ª–¥–æ–Ω–±–æ–≥–æ–Ω–¥–æ–Ω –∞—Ä—Ç—ã–∫.',
        '–ö–æ–ª –∂—É—É—à —É–±–∞–≥—ã. –ö–æ–ª–¥—É –∫–∏–π–∏–º–≥–µ –∞–∞—Ä—á—ã–≥–∞–Ω—ã –∂–µ —Ç–∞–∫—ã—Ä –∞–∞—Ä—á—ã–±–∞–≥–∞–Ω—ã  –∏—à—Ç–∏ –∂–æ–∫–∫–æ —á—ã–≥–∞—Ä–∞—Ç. '
        '\n–ö–æ–ª –∂—É—É–≥–∞–Ω –∂–∞–π –±–æ–ª–±–æ—Å–æ, –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫—Ç–∏ –∫–æ–ª–¥–æ–Ω–≥—É–ª–∞.',
        '–ö–æ–ª –∂—É—É—à –º–µ–∑–≥–∏–ª–∏. –ë–∞–∫—Ç–µ—Ä–∏—è–ª–∞—Ä–¥—ã–Ω –∫”©–±“Ø–Ω—á”©—Å“Ø –±–∞—Ä–º–∞–∫—Ç—ã–Ω —É—á—É–Ω–¥–∞ –∂–∞–Ω–∞ —Ç—ã—Ä–º–∞–∫—Ç–∞—Ä–¥—ã–Ω –∞—Å—Ç—ã–Ω–¥–∞ –∂–∞–π–≥–∞—à–∞—Ç. '
        '\n–ö–æ–ª–¥—É –∏—á–∏–Ω–µ–Ω –∂–∞–Ω–∞ —Å—ã—Ä—Ç—ã–Ω–∞–Ω, –±–∞—Ä–º–∞–∫—Ç–∞—Ä–¥—ã–Ω –æ—Ä—Ç–æ—Å—É–Ω–∞–Ω –∂—É—É—à –∫–µ—Ä–µ–∫, –∂–∞–Ω–∞ —Ç—ã—Ä–º–∞–∫ –∞—Å—Ç—ã–Ω–¥–∞ –∂—É—É–≥–∞–Ω–≥–∞ –∞—Ä–∞–∫–µ—Ç –∫—ã–ª—ã—à –∫–µ—Ä–µ–∫.'
    ]
    return random.choice(text)


@bot.message_handler(commands=['start'])
def welcome(m):
    if m.chat.id in cfg.users:
        pass
    else:
        cfg.users[m.chat.id] = {'lang': 'eng', 'work': False, 'say': 0}
        bot.send_message(m.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', reply_markup=Langs)
        print('New user:', m.from_user.first_name, m.from_user.last_name, 'nick:', m.from_user.username)


@bot.message_handler(content_types=['text'])
def answers(m):
    def func_thread():
        if m.text == 'English üá¨üáß':
            cfg.users[m.chat.id]['lang'] = 'eng'
            bot.send_message(m.chat.id, 'Choose time', reply_markup=time_Eng)
        elif m.text == '–†—É—Å—Å–∫–∏–π üá∑üá∫':
            cfg.users[m.chat.id]['lang'] = 'rus'
            bot.send_message(m.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è', reply_markup=time_Rus)
        elif m.text == '–ö—ã—Ä–≥—ã–∑—á–∞ üá∞üá¨':
            cfg.users[m.chat.id]['lang'] = 'kgz'
            bot.send_message(m.chat.id, '–£–±–∞–∫—ã—Ç—Ç—ã —Ç–∞–Ω–¥–∞“£—ã–∑', reply_markup=time_Kgz)
        if m.text == '30':
            cfg.users[m.chat.id]['say'] = 30
            cfg.users[m.chat.id]['work'] = True
        if m.text == '60':
            cfg.users[m.chat.id]['say'] = 60
            cfg.users[m.chat.id]['work'] = True
        if m.text == 'Stop' or m.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' or m.text == '–¢–æ–∫—Ç–æ—Ç—É—É':
            cfg.users[m.chat.id]['work'] = False
            if m.text == 'Stop':
                bot.send_message(m.chat.id, 'Stopped!', reply_markup=Langs)
            elif m.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å':
                bot.send_message(m.chat.id, '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!', reply_markup=Langs)
            elif m.text == '–¢–æ–∫—Ç–æ—Ç—É—É':
                bot.send_message(m.chat.id, '–¢–æ–∫—Ç–æ—Ç—É–ª–¥—É!', reply_markup=Langs)
        if 22 <= int(time.strftime('%H')) <= 7:
            pass
        else:
            while cfg.users[m.chat.id]['work'] == True:
                if cfg.users[m.chat.id]['lang'] == 'rus':
                    if m.text == '30':
                        bot.send_message(m.chat.id, random_rus_30m())
                        time.sleep(1800)
                    elif m.text == '60':
                        bot.send_message(m.chat.id, random_rus_1h())
                        time.sleep(3600)
                elif cfg.users[m.chat.id]['lang'] == 'kgz':
                    if m.text == '30':
                        bot.send_message(m.chat.id, random_kgz_30m())
                        time.sleep(1800)
                    if m.text == '60':
                        bot.send_message(m.chat.id, random_kgz_30m())
                        time.sleep(3600)
                elif cfg.users[m.chat.id]['lang'] == 'eng':
                    if m.text == '30':
                        bot.send_message(m.chat.id, random_eng_30m())
                        time.sleep(1800)
                    if m.text == '60':
                        bot.send_message(m.chat.id, random_eng_1h())
                        time.sleep(3600)

    if __name__ == '__main__':
        Thread(target=func_thread).start()

try:
    bot.polling(none_stop=True, interval=0, timeout=60)
except Exception as E:
    print(E)